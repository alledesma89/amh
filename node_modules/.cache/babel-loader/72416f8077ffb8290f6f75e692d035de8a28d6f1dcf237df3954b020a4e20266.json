{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\AMH\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [clientes, setClientes] = useState([]);\n  const [nombreCliente, setNombreCliente] = useState('');\n  const [emailCliente, setEmailCliente] = useState('');\n  useEffect(() => {\n    // Aquí debes hacer una llamada a la API para obtener la lista de clientes\n    // y actualizar el estado \"clientes\" con los datos recibidos\n  }, []);\n  const handleAgregarCliente = () => {\n    // Aquí debes hacer una llamada a la API para agregar un nuevo cliente\n    // utilizando los valores de \"nombreCliente\" y \"emailCliente\"\n    // Después de agregar el cliente, actualiza la lista de clientes y limpia los campos de entrada\n  };\n  const handleEliminarCliente = id => {\n    // Aquí debes hacer una llamada a la API para eliminar el cliente con el ID proporcionado\n    // Después de eliminar el cliente, actualiza la lista de clientes\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Agregar cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nombre\",\n      value: nombreCliente,\n      onChange: e => setNombreCliente(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: emailCliente,\n      onChange: e => setEmailCliente(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAgregarCliente,\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de clientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clientes.map(cliente => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [cliente.nombre, \" - \", cliente.email, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEliminarCliente(cliente.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, cliente.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tOk0IHMLzoav51SFEW6iJvfLhBQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","clientes","setClientes","nombreCliente","setNombreCliente","emailCliente","setEmailCliente","handleAgregarCliente","handleEliminarCliente","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","cliente","nombre","email","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/AMH/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [nombreCliente, setNombreCliente] = useState('');\r\n  const [emailCliente, setEmailCliente] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Aquí debes hacer una llamada a la API para obtener la lista de clientes\r\n    // y actualizar el estado \"clientes\" con los datos recibidos\r\n  }, []);\r\n\r\n  const handleAgregarCliente = () => {\r\n    // Aquí debes hacer una llamada a la API para agregar un nuevo cliente\r\n    // utilizando los valores de \"nombreCliente\" y \"emailCliente\"\r\n    // Después de agregar el cliente, actualiza la lista de clientes y limpia los campos de entrada\r\n  };\r\n\r\n  const handleEliminarCliente = (id) => {\r\n    // Aquí debes hacer una llamada a la API para eliminar el cliente con el ID proporcionado\r\n    // Después de eliminar el cliente, actualiza la lista de clientes\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Clientes</h1>\r\n\r\n      <h2>Agregar cliente</h2>\r\n      <input type=\"text\" placeholder=\"Nombre\" value={nombreCliente} onChange={(e) => setNombreCliente(e.target.value)} />\r\n      <input type=\"email\" placeholder=\"Email\" value={emailCliente} onChange={(e) => setEmailCliente(e.target.value)} />\r\n      <button onClick={handleAgregarCliente}>Agregar</button>\r\n\r\n      <h2>Lista de clientes</h2>\r\n      <ul>\r\n        {clientes.map((cliente) => (\r\n          <li key={cliente.id}>\r\n            {cliente.nombre} - {cliente.email}{' '}\r\n            <button onClick={() => handleEliminarCliente(cliente.id)}>Eliminar</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,MAAMW,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACA;IACA;EAAA,CACD;EAED,MAAMC,qBAAqB,GAAIC,EAAE,IAAK;IACpC;IACA;EAAA,CACD;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjBhB,OAAA;MAAAY,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBhB,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,QAAQ;MAACC,KAAK,EAAEd,aAAc;MAACe,QAAQ,EAAGC,CAAC,IAAKf,gBAAgB,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnHhB,OAAA;MAAOiB,IAAI,EAAC,OAAO;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAEZ,YAAa;MAACa,QAAQ,EAAGC,CAAC,IAAKb,eAAe,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjHhB,OAAA;MAAQuB,OAAO,EAAEd,oBAAqB;MAAAG,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEvDhB,OAAA;MAAAY,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhB,OAAA;MAAAY,QAAA,EACGT,QAAQ,CAACqB,GAAG,CAAEC,OAAO,iBACpBzB,OAAA;QAAAY,QAAA,GACGa,OAAO,CAACC,MAAM,EAAC,KAAG,EAACD,OAAO,CAACE,KAAK,EAAE,GAAG,eACtC3B,OAAA;UAAQuB,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAACe,OAAO,CAACd,EAAE,CAAE;UAAAC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFpES,OAAO,CAACd,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACd,EAAA,CAzCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}